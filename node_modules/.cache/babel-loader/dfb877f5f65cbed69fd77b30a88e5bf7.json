{"ast":null,"code":"var _jsxFileName = \"/home/leticia/Documentos/projetos/react/todo/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport * as C from './App.styles';\nimport { ListItem } from './components/ListItem';\nimport { AddArea } from './components/AddArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [list, setList] = useState([{\n    id: 1,\n    name: 'Lavar os sapatos',\n    done: false\n  }, {\n    id: 2,\n    name: 'Comprar açucar',\n    done: true\n  }]);\n\n  const handleAddTask = taskName => {\n    let newList = [...list];\n    newList.push({\n      id: list.length + 1,\n      name: taskName,\n      done: false\n    });\n    setList(newList);\n  }; //change task status \n\n\n  const handleTaskChange = (id, done) => {\n    let newList = [...list];\n\n    for (let i in newList) {\n      if (newList[i].id === id) {\n        newList[i].done = done;\n      }\n    }\n\n    setList(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(C.Container, {\n    children: /*#__PURE__*/_jsxDEV(C.Area, {\n      children: [/*#__PURE__*/_jsxDEV(C.Header, {\n        children: \"Lista de Tarefas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddArea, {\n        onEnter: handleAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), list.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        item: item,\n        onChange: handleTaskChange\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"8msvf5V53SJNq3+aUkgVtwI06vg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/leticia/Documentos/projetos/react/todo/src/App.tsx"],"names":["useState","C","ListItem","AddArea","App","list","setList","id","name","done","handleAddTask","taskName","newList","push","length","handleTaskChange","i","map","item","index"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,CAAZ,MAAmB,cAAnB;AAEA,SAAQC,QAAR,QAAuB,uBAAvB;AACA,SAASC,OAAT,QAAwB,sBAAxB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAS,CACvC;AAACO,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE,kBAAd;AAAkCC,IAAAA,IAAI,EAAE;AAAxC,GADuC,EAEvC;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE,gBAAd;AAAgCC,IAAAA,IAAI,EAAE;AAAtC,GAFuC,CAAT,CAAhC;;AAKA,QAAMC,aAAa,GAAIC,QAAD,IAAsB;AAC1C,QAAIC,OAAO,GAAG,CAAC,GAAGP,IAAJ,CAAd;AACAO,IAAAA,OAAO,CAACC,IAAR,CAAa;AACTN,MAAAA,EAAE,EAAEF,IAAI,CAACS,MAAL,GAAc,CADT;AAETN,MAAAA,IAAI,EAAEG,QAFG;AAGTF,MAAAA,IAAI,EAAE;AAHG,KAAb;AAKAH,IAAAA,OAAO,CAACM,OAAD,CAAP;AACH,GARC,CANgB,CAelB;;;AACA,QAAMG,gBAAgB,GAAG,CAACR,EAAD,EAAaE,IAAb,KAA+B;AACtD,QAAIG,OAAO,GAAG,CAAC,GAAGP,IAAJ,CAAd;;AACA,SAAK,IAAIW,CAAT,IAAcJ,OAAd,EAAsB;AACpB,UAAIA,OAAO,CAACI,CAAD,CAAP,CAAWT,EAAX,KAAkBA,EAAtB,EAAyB;AACvBK,QAAAA,OAAO,CAACI,CAAD,CAAP,CAAYP,IAAZ,GAAmBA,IAAnB;AACD;AACF;;AACDH,IAAAA,OAAO,CAACM,OAAD,CAAP;AACD,GARD;;AAUE,sBACE,QAAC,CAAD,CAAG,SAAH;AAAA,2BACE,QAAC,CAAD,CAAG,IAAH;AAAA,8BACE,QAAC,CAAD,CAAG,MAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,cAHF,EAMIL,IAAI,CAACY,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACP,QAAC,QAAD;AAAsB,QAAA,IAAI,EAAED,IAA5B;AAAkC,QAAA,QAAQ,EAAEH;AAA5C,SAAeI,KAAf;AAAA;AAAA;AAAA;AAAA,cADF,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3CD;;GAAMf,G;;KAAAA,G;AA6CN,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport * as C from './App.styles';\nimport { Item } from './types/Item';\nimport {ListItem} from './components/ListItem';\nimport { AddArea } from './components/AddArea';\n\nconst App = () => {\n  const [list, setList] = useState<Item[]>([\n    {id: 1, name: 'Lavar os sapatos', done: false},\n    {id: 2, name: 'Comprar açucar', done: true}\n  ])\n\n  const handleAddTask = (taskName: string) => {\n    let newList = [...list];\n    newList.push({\n        id: list.length + 1,\n        name: taskName,\n        done: false\n    });\n    setList(newList);\n}\n//change task status \nconst handleTaskChange = (id: number, done: boolean) => {\n  let newList = [...list];\n  for (let i in newList){\n    if (newList[i].id === id){\n      newList[i]. done = done;\n    }\n  }\n  setList(newList);\n}\n\n  return(\n    <C.Container>\n      <C.Area>\n        <C.Header>Lista de Tarefas</C.Header>\n        \n        <AddArea onEnter={handleAddTask}/>\n\n        {\n          list.map((item, index)=> (\n            <ListItem key={index} item={item} onChange={handleTaskChange}/>\n          ))\n        }\n\n\n      </C.Area>\n    </C.Container>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}